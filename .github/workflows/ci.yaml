name: "CI"

on:
  workflow_call:
    inputs:
      earthly_version:
        default: 'latest'
        required: false
        type: string
      workdir:
        required: false
        type: string
      target:
        default: '+build-all-platforms'
        required: false
        type: string
      cache:
        required: false
        type: string
      release:
        required: false
        default: false
        type: boolean
      release_name:
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  EARTHLY_REMOTE_CACHE: ${{ inputs.cache }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      FORCE_COLOR: 1
    steps:
      - name: Set up QEMU for multi-platform builds
        id: qemu
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - uses: earthly/actions-setup@v1
        with:
          version: ${{ inputs.earthly_version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Target
        if: ${{ (github.event_name != 'push' || github.ref_name != 'main') }}
        working-directory: ${{ inputs.workdir }}
        run: earthly --secret GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} --strict --push "${{ inputs.target }}"
      - name: Build Target and Push
        # Only push if this was a merge to main
        if: ${{ (github.event_name == 'push' && github.ref_name == 'main') }}
        working-directory: ${{ inputs.workdir }}
        run: earthly --secret GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} --strict --push "${{ inputs.target }}"
      - name: Release
        if: ${{ (github.event_name == 'push' && github.ref_name == 'main') && inputs.release && inputs.release_name != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.release_name }}"
          path: "${{ inputs.workdir && format('{0}/', inputs.workdir) }}dist/*"
