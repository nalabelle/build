VERSION --pass-args --arg-scope-and-set 0.7
FROM ghcr.io/nalabelle/build/images/debian:0.1.0@sha256:56009f1016d17cf5fadacdc06ea404674f5cca4ecff2fa957a0ed891453c7fc9

PRINT:
  COMMAND
  RUN --no-cache cat /lineage.json

SAVE_IMAGE:
  COMMAND
  ARG --required REGISTRY
  ARG target=$(jq -r '.target' /manifest.json)
  ARG component=$(jq -r '.component' /manifest.json)
  ARG version=$(jq -r '.version' /manifest.json)
  ARG variant=""
  ARG extra_variants
  IF [ -n "$variant" ] && [ -n "$extra_variants" ]
    RUN { echo "--variant and --extra_variants cannot be set at the same time"; false }
  END

  LET IMAGE=${REGISTRY}/${component}/${target}
  IF [ -z "$REGISTRY" ]
    SET IMAGE=${component}/${target}
  END

  # SUFFIX: branch/git status
  LET suffix=""
  LET status=$(jq -r '.source.status' /manifest.json)
  LET ref=$(jq -r '.source.ref' /manifest.json)
  IF [ "$ref" != "main" ]
    SET suffix="$ref"
  END
  IF [ "$status" = "dirty" ]
    SET suffix="$suffix-DIRTY"
  END

  LET tag="$version"
  IF [ -n "$extra_variants" ]
  ELSE
    IF [ -n "$variant" ]
      SET tag="$tag-$variant"
    END
  END

  SAVE IMAGE --push $IMAGE:$tag

MANIFEST:
  COMMAND
  ARG --required VERSION
  ARG --required COMPONENT
  ARG --required EARTHLY_TARGET_NAME
  ARG TARGET=${EARTHLY_TARGET_NAME}
  COPY --pass-args (+build-manifest/manifest.json \
        --TARGET=$TARGET \
        ) /manifest.json
  RUN [ -f /lineage.json ] || echo "[]" > /lineage.json \
      && jq '. += [input]' /lineage.json /manifest.json > /tmp/new-lineage.json \
      && mv /tmp/new-lineage.json /lineage.json
  SAVE ARTIFACT /manifest.json
  SAVE ARTIFACT /lineage.json

  # OCI LABELS
  LABEL "org.opencontainers.image.source"="$(jq -r '.source.origin' /manifest.json)"
  LABEL "org.opencontainers.image.revision"="$(jq -r '.source.id' /manifest.json)"
  LABEL "org.opencontainers.image.created"="$(jq -r '.buildTime' /manifest.json)"
build-manifest:
  ARG JINJA_IMAGE="ghcr.io/nalabelle/build/text-tools/jinja:0.1.0@sha256:211cbcef2c8828cd655cdc91458187205d5b50e7c26ee2d110be539d8cc2795e"
  # component info
  ARG --required VERSION
  ARG --required COMPONENT
  ARG --required TARGET
  ARG GIT_STATUS="clean"
  # earthly info
  ARG EARTHLY_GIT_HASH
  ARG EARTHLY_GIT_BRANCH
  ARG EARTHLY_GIT_ORIGIN_URL
  ARG EARTHLY_CI
  # github info
  ARG GITHUB_ACTION=""
  ARG GITHUB_REF_NAME=""
  ARG GITHUB_REPOSITORY=""
  ARG GITHUB_RUN_ID=""
  ARG GITHUB_RUN_NUMBER=""
  ARG GITHUB_SERVER_URL=""
  ARG GITHUB_SHA=""
  FROM $JINJA_IMAGE
  COPY manifest.json.j2 .
  RUN export EARTHLY_TEST="$(date --rfc-3339=seconds)"
  RUN env | sort | grep -E 'VERSION|TARGET|COMPONENT|GITHUB_|EARTHLY_|GIT_' > dotenv
  IF [ -n "$EARTHLY_CI" ]
    RUN --no-cache printf "BUILD_TIME=%s" "$(date --rfc-3339=seconds)" >> dotenv
  ELSE
    RUN printf "BUILD_TIME=%s" "$(date --rfc-3339=seconds)" >> dotenv
  END
  RUN jinja2 --format=env --strict manifest.json.j2 dotenv > manifest.json
  SAVE ARTIFACT manifest.json
