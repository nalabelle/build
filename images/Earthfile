VERSION --pass-args --arg-scope-and-set 0.7
ARG --global TARGETARCH
FROM DOCKERFILE --target debian12-${TARGETARCH} -f digests.Dockerfile .
IMPORT ../manifests AS manifests
IMPORT ../info AS info

ARG --global __COMPONENT__="manifests"
ARG --global __VERSION__="0.0.1"
ARG --global REGISTRY="ghcr.io/nalabelle/build"

build-all-platforms:
  BUILD --platform=linux/amd64 --platform=linux/arm64 +build

build:
  BUILD +debian12
  BUILD +python3.11
  BUILD +python3.12

CONFIGURE_ENVIRONMENT:
  COMMAND
  ENV LANG="C.UTF-8"
  ENV LC_ALL="C.UTF-8"
  ENV TZ="Etc/UTC"

  RUN groupadd --gid 1999 user
  RUN useradd \
    --uid 1999 \
    --gid 1999 \
    --no-log-init \
    --shell /bin/bash \
    --create-home \
    --home-dir /app \
    user

CONFIGURE_DEFAULT_PACKAGES:
  COMMAND
  RUN if command -v apt > /dev/null; then \
        apt-get update \
        && DEBIAN_FRONTEND=noninteractive \apt-get install -y --no-install-recommends \
          ca-certificates \
          curl \
          gcc \
          git \
          libc6-dev \
          tzdata \
          yq \
        && rm -rf /var/lib/apt/lists/*; \
      else \
        echo "The package manager isn't supported"; \
        false; \
      fi

debian12:
  FROM +debian --version=12
  DO manifests+SAVE_IMAGE --REGISTRY=$REGISTRY
  DO manifests+SAVE_IMAGE --REGISTRY=$REGISTRY --variant=debian12
  DO manifests+PRINT

debian:
  ARG version=12
  FROM DOCKERFILE --target debian$version-${TARGETARCH} -f digests.Dockerfile .
  DO +CONFIGURE_ENVIRONMENT
  DO +CONFIGURE_DEFAULT_PACKAGES
  COPY --if-exists info+git-status/git-dirty /git-dirty
  DO manifests+MANIFEST \
    --VERSION=$__VERSION__ \
    --COMPONENT=$__COMPONENT__
  DO manifests+STANDARD_LABEL

python3.12:
  FROM +python --version=3.12
  DO manifests+SAVE_IMAGE --REGISTRY=$REGISTRY
  DO manifests+SAVE_IMAGE --REGISTRY=$REGISTRY --variant=python3.12
  DO manifests+PRINT

python3.11:
  FROM +python --version=3.11
  DO manifests+SAVE_IMAGE --REGISTRY=$REGISTRY --variant=python3.11
  DO manifests+PRINT

python:
  ARG --required version
  FROM DOCKERFILE --target python${version}-${TARGETARCH} -f digests.Dockerfile .
  DO +CONFIGURE_ENVIRONMENT
  DO +CONFIGURE_DEFAULT_PACKAGES
  # renovate: datasource=github-releases depName=pypa/pipx
  ARG PIPX_VERSION=1.2.1
  RUN curl -fssLO https://github.com/pypa/pipx/releases/download/1.2.1/pipx.pyz \
        && mv pipx.pyz /usr/local/bin/pipx \
        && chmod +x /usr/local/bin/pipx \
        && pipx --version
  DO +POETRY
  COPY --if-exists info+git-status/git-dirty /git-dirty
  DO manifests+MANIFEST \
    --VERSION=$__VERSION__ \
    --COMPONENT=$__COMPONENT__
  DO manifests+STANDARD_LABEL

POETRY:
  COMMAND
  ENV PYTHONIOENCODING="UTF-8"

  # renovate: datasource=github-releases depName=python-poetry/poetry
  ARG POETRY_VERSION=1.6.1
  ENV POETRY_HOME=/opt/poetry
  ENV POETRY_VENV=/opt/poetry-venv
  ENV POETRY_CACHE_DIR=/opt/.cache

  RUN PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx \
      install poetry=="${POETRY_VERSION}"

  ENV PATH="${PATH}:${POETRY_VENV}/bin"
