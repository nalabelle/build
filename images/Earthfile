VERSION --pass-args --arg-scope-and-set 0.7
ARG --global TARGETARCH
IMPORT ../ AS b
FROM DOCKERFILE --target debian12-${TARGETARCH} -f digests.Dockerfile .

build-all-platforms:
  BUILD --platform=linux/amd64 --platform=linux/arm64 +build

build:
  BUILD +debian12
  BUILD +python3.11
  BUILD +python3.12

version:
  DO b+VERSION_CZ

CONFIGURE_ENVIRONMENT:
  COMMAND
  ENV LANG="C.UTF-8"
  ENV LC_ALL="C.UTF-8"
  ENV TZ="Etc/UTC"

  RUN groupadd --gid 1999 user
  RUN useradd \
    --uid 1999 \
    --gid 1999 \
    --no-log-init \
    --shell /bin/bash \
    user

CONFIGURE_DEFAULT_PACKAGES:
  COMMAND
  RUN if command -v apt > /dev/null; then \
        apt-get update \
        && DEBIAN_FRONTEND=noninteractive \apt-get install -y --no-install-recommends \
          ca-certificates \
          curl \
          gcc \
          git \
          libc6-dev \
          tzdata \
          yq \
        && rm -rf /var/lib/apt/lists/*; \
      else \
        echo "The package manager isn't supported"; \
        false; \
      fi

UPSTREAM:
  COMMAND
  ARG --required version
  ARG EARTHLY_TARGET_NAME
  FROM DOCKERFILE --target ${EARTHLY_TARGET_NAME}${version}-${TARGETARCH} -f digests.Dockerfile .

debian12:
  FROM +debian --version=12
  COPY (+version/version) /manifests/version
  DO --pass-args b+SAVE_IMAGE --target=debian --variant=debian12.2 --version=$(cat /manifests/version)

debian:
  DO --pass-args +UPSTREAM
  DO +CONFIGURE_ENVIRONMENT
  DO +CONFIGURE_DEFAULT_PACKAGES

python3.12:
  FROM +python --version=3.12
  COPY (+version/version) /manifests/version
  DO --pass-args b+SAVE_IMAGE --target=python --variant=python3.12 --version=$(cat /manifests/version)

python3.11:
  FROM +python --version=3.11
  COPY (+version/version) /manifests/version
  DO --pass-args b+SAVE_IMAGE --target=python --variant=python3.11 --version=$(cat /manifests/version)

python:
  DO --pass-args +UPSTREAM
  DO +CONFIGURE_ENVIRONMENT
  DO +CONFIGURE_DEFAULT_PACKAGES
  # renovate: datasource=github-releases depName=pypa/pipx
  ARG PIPX_VERSION=1.2.1
  RUN curl -fssLO https://github.com/pypa/pipx/releases/download/1.2.1/pipx.pyz \
        && mv pipx.pyz /usr/local/bin/pipx \
        && chmod +x /usr/local/bin/pipx \
        && pipx --version
  DO +POETRY

POETRY:
  COMMAND
  ENV PYTHONIOENCODING="UTF-8"

  # renovate: datasource=github-releases depName=python-poetry/poetry
  ARG POETRY_VERSION=1.6.1
  ENV POETRY_HOME=/opt/poetry
  ENV POETRY_VENV=/opt/poetry-venv
  ENV POETRY_CACHE_DIR=/opt/.cache

  RUN PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx \
      install poetry=="${POETRY_VERSION}"

  ENV PATH="${PATH}:${POETRY_VENV}/bin"
